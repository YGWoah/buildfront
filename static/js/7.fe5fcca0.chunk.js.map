{"version":3,"sources":["assets/UpVotedBlack.svg","assets/UpVotedBlue.svg","assets/reply.svg","Compenents/postRouterSubCompenents/AddReply.js","Compenents/postRouterSubCompenents/Reply.js","Compenents/PostRouter.js"],"names":["module","exports","__webpack_require__","p","AddReply","axios","defaults","withCredentials","postID","useParams","contentInput","useRef","_useState","useState","_useState2","Object","_home_yg_Desktop_DevFolders_netlify_front_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","image","setImage","sendReply","_ref","_home_yg_Desktop_DevFolders_netlify_front_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_yg_Desktop_DevFolders_netlify_front_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","formData","wrap","_context","prev","next","FormData","append","data","current","value","post","headers","Content-Type","then","res","console","log","stop","apply","this","arguments","react__WEBPACK_IMPORTED_MODULE_4___default","createElement","className","type","placeholder","ref","onKeyUp","e","key","onChange","target","files","preview","URL","createObjectURL","saveIamge","src","plus","onClick","Reply","props","profileImg","setProfileImg","_useState3","_useState4","replyImage","setReplyImage","getReplierImage","userName","responseType","resp","base64ImageString","Buffer","from","toString","catch","err","getReplyImage","_ref2","_callee2","_context2","abrupt","concat","useEffect","react__WEBPACK_IMPORTED_MODULE_3___default","alt","role","handleUpVote","upVotedBlack","content","PostRouter","postImage","setPostImage","_useState5","_useState6","replies","setReplies","_useState7","_useState8","setPost","getPost","get","params","result","getImage","getReplies","_ref3","_callee3","_context3","getProfileImage","_ref4","_callee4","_context4","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","to","_postRouterSubCompenents_AddReply__WEBPACK_IMPORTED_MODULE_10__","map","reply","_postRouterSubCompenents_Reply__WEBPACK_IMPORTED_MODULE_11__","replyContent"],"mappings":"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","file":"static/js/7.fe5fcca0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/UpVotedBlack.4470e6a8.svg\";","module.exports = __webpack_public_path__ + \"static/media/UpVotedBlue.64b95137.svg\";","module.exports = __webpack_public_path__ + \"static/media/reply.e9f41363.svg\";","import axios from 'axios'\nimport React, { useRef,useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport plus from '../../assets/+.svg'\n\nconst SERVER = \"http://localhost:3001\";\n\nconst AddReply = () => {\n  axios.defaults.withCredentials = true\n  let {postID} = useParams()\n  const contentInput = useRef()\n  const [image, setImage] = useState(\"\");\n\n  const saveIamge = (e) => {\n\n    setImage({data:e.target.files[0],preview:URL.createObjectURL(e.target.files[0])});\n\n  };\n  const sendReply = async()=>{\n    const formData = new FormData();\n    formData.append(\"image\", image.data);\n    formData.append(\"toPostID\",postID)\n    formData.append(\"content\", contentInput.current.value);\n\n\n    await axios.post(`/post/addreply`,formData,{headers: {\n      \"Content-Type\": \"multipart/form-data\",\n    }},).then((res)=>{\n      console.log(res);\n    })\n  }\n  return (\n    <div className='addReply'>\n        <div>\n          <div>\n              <input type=\"text\" placeholder='Write a reply' ref={contentInput} onKeyUp={(e)=>{if(e.key===\"Enter\"){sendReply()}}} />\n          </div>\n          <div>\n              <input type=\"file\" onChange={(e)=>{saveIamge(e)}}  />\n              <img src={plus}/>\n          </div>\n          <div onClick={sendReply}>\n              <p>Post</p>\n          </div>\n        </div>\n        <div>\n          <img src={image.preview}/>\n        </div>\n        \n    </div>\n  )\n}\n\nexport default AddReply","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport handleUpVote from '../../assets/UpVotedBlack.svg';\nimport upVoteimg from '../../assets/UpVotedBlue.svg';\nimport upVotedBlack from '../../assets/UpVotedBlack.svg';\n\nconst SERVER = 'http://localhost:3001';\n\nconst Reply = (props) => {\n  const [profileImg, setProfileImg] = useState();\n  const [replyImage, setReplyImage] = useState();\n  const getReplierImage = async () => {\n    await axios\n      .post(\n        `/contact/contactprofileimage`,\n        { userName: props.userName },\n        { responseType: 'arraybuffer' }\n      )\n      .then((resp) => {\n        let base64ImageString = Buffer.from(\n          resp.data,\n          'binary'\n        ).toString('base64');\n        setProfileImg('data:image/png;base64,' + base64ImageString);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const getReplyImage = async () => {\n    if (props.replyImage == 'null' || !props.replyImage) {\n      return;\n    }\n    if (props.replyImage) {\n      await axios\n        .post(\n          `${SERVER}/post/replyimage`,\n          { replyImage: props.replyImage },\n          { responseType: 'arraybuffer' }\n        )\n        .then((resp) => {\n          let base64ImageString = Buffer.from(\n            resp.data,\n            'binary'\n          ).toString('base64');\n          setReplyImage('data:image/png;base64,' + base64ImageString);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  useEffect(() => {\n    getReplierImage();\n    getReplyImage();\n  }, []);\n  return (\n    <div className=\"post\">\n      <div>\n        <div>\n          <div>\n            <img src={profileImg} alt=\"\" />\n          </div>\n          <div>\n            <h5>{props.userName}</h5>\n            <p>{props.role}</p>\n          </div>\n        </div>\n        <div onClick={handleUpVote}>\n          <img src={upVotedBlack} alt=\"\" />\n          <p>Up vote</p>\n        </div>\n      </div>\n      <div>\n        <p>{props.content}</p>\n      </div>\n      <div>\n        <img src={replyImage} alt=\"\" />\n      </div>\n    </div>\n  );\n};\n\nexport default Reply;\n","import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport reply from '../assets/reply.svg';\nimport upVotedBlack from '../assets/UpVotedBlack.svg';\nimport upVotedBlue from '../assets/UpVotedBlue.svg';\nimport AddReply from './postRouterSubCompenents/AddReply';\nimport Reply from './postRouterSubCompenents/Reply';\nimport './styles/PostRouter/postRouterStyle.css';\nconst SERVER = 'http://localhost:3001';\n\nconst PostRouter = (props) => {\n  axios.defaults.withCredentials = true;\n  let { postID } = useParams();\n  const [postImage, setPostImage] = useState();\n  const [profileImg, setProfileImg] = useState();\n  const [replies, setReplies] = useState([]);\n  let [post, setPost] = useState({});\n  const getPost = async () => {\n    await axios\n      .get(`/post/getpost`, {\n        params: { postID: postID },\n      })\n      .then((res) => {\n        setPost(res.data.result[0]);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const getImage = async () => {\n    await axios\n      .post(\n        `/post/getpostimage`,\n        { postID: postID },\n        { responseType: 'arraybuffer' }\n      )\n      .then((res) => {\n        let base64ImageString = Buffer.from(\n          res.data,\n          'binary'\n        ).toString('base64');\n        setPostImage('data:image/png;base64,' + base64ImageString);\n      });\n  };\n  const getReplies = async () => {\n    await axios\n      .get(`${SERVER}/post/getreplies`, {\n        params: { postID: postID },\n      })\n      .then((res) => {\n        setReplies(res.data.result);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const getProfileImage = async () => {\n    await axios\n      .post(\n        `/post/getposterimageprofile`,\n        { postID: postID },\n        { responseType: 'arraybuffer' }\n      )\n      .then((resp) => {\n        let base64ImageString = Buffer.from(\n          resp.data,\n          'binary'\n        ).toString('base64');\n        setProfileImg('data:image/png;base64,' + base64ImageString);\n        console.log(profileImg);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  useEffect(() => {\n    getPost();\n    getImage();\n    getProfileImage();\n    getReplies();\n  }, []);\n  useEffect(() => {\n    console.log('post');\n    console.log(post);\n  }, [post]);\n\n  return (\n    <div className=\"post overflow\">\n      <div>\n        <div>\n          <Link to={`/profile/${post.userName}`}>\n            <div>\n              <img src={profileImg} />\n            </div>\n            <div>\n              <h5>{post.userName}</h5>\n              <p>{props.role}</p>\n            </div>\n          </Link>\n        </div>\n        <div onClick={''}>\n          <img src={upVotedBlack} alt=\"\" />\n          <p>Up vote</p>\n        </div>\n      </div>\n      <div>\n        <p>{post.content}</p>\n      </div>\n      <div>\n        <img src={postImage} />\n      </div>\n      <div>\n        {/*img src={reply}/><p>Reply</p>*/}\n        <AddReply />\n      </div>\n      <div>\n        {replies.map((reply) => {\n          return (\n            <Reply\n              replyImage={reply.replyImage}\n              userName={reply.userName}\n              content={reply.replyContent}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default PostRouter;\n"],"sourceRoot":""}